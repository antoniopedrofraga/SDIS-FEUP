package subprotocols;

import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import data.ChunkInfo;
import data.ChunksList;
import data.Data;

public class SpaceReclaim extends Thread {
	static int space; //space in bytes
	
	SpaceReclaim (int space) {
		this.space = space;
	}
	
	public void run() {
		if (space > Data.getUsedSpace()) {
			System.out.println("Space to recover is bigger than the space used by this peer, will delete all chunks.");
			space = Data.getUsedSpace();
		}
		
		ChunksList allChunks;
		HashMap<String, ChunksList> chunksSaved = Data.getChunksSaved();
		for (Object value : chunksSaved.values()) {
		    
		}
	}

	public static int getSpace() {
		return space;
	}
	
}
