package subprotocols;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

import peers.Peer;
import utilities.Constants;

public class Backup extends Thread{
	private String fileName;
	private Peer originPeer;
	
	Backup(String fileName, Peer peer) {
		this.fileName = fileName;
		this.peer = peer;
	}
	
	public void run() {
		Path path = Paths.get(Constants.FILES_ROOT + fileName);
		try {
			byte[] data = Files.readAllBytes(path);
			sendChunks(data);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	private void sendChunks(byte[] data) {
		int chunksNum = data.length / Constants.CHUNK_SIZE + 1;
		
		for (int i = 0; i < chunksNum; i++) {
			ChunkBackup chunkBackup = new ChunkBackup(Constants.BACKUP, "1.0", senderId, fileName, i + "", "0");
		}
	}
}
