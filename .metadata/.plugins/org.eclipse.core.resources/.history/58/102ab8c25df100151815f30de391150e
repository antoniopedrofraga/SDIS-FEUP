package channels;

import java.io.IOException;
import java.util.concurrent.ThreadLocalRandom;

import messages.Header;
import messages.Message;
import peers.Peer;
import utilities.Constants;

public class MdbChannel extends Channel{
	
	public MdbChannel(String mdbAddress, String mdbPort) throws IOException {
		super(mdbAddress, mdbPort);
		this.thread = new MdbThread();
	}
	
	public void listen() {
		this.thread.start();
	}
	
	public void handlePutChunk(String[] splittedMsg) {
		
	}
	
	public class MdbThread extends Thread {
		public void run() {
			while(true) {
				System.out.println("Listening the MDB channel...");
				try {
					String data = Peer.rcvMultiCastData(socket, address);
					String[] splittedMsg = Message.splitArgs(data);
					if(!Peer.getServerId().equals(splittedMsg[Constants.SENDER_ID])) {
						switch (splittedMsg[Constants.MESSAGE_TYPE]) {
						case Constants.PUTCHUNK:
							handlePutChunk(splittedMsg);
							break;
						}
					}
				} catch (IOException | InterruptedException e) {
					e.printStackTrace();
				}
			}
		}
	}
}
