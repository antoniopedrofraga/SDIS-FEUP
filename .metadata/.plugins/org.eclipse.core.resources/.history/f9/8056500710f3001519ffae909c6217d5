package utilities;

import java.util.ArrayDeque;
import java.util.Arrays;
import java.util.Deque;

public class Utilities {
	// From internet: http://stackoverflow.com/questions/5513152/easy-way-to-concatenate-two-byte-arrays
	public static byte[] concatenateBytes(byte[]a, byte[] b) {
		byte[] c = new byte[a.length + b.length];
		System.arraycopy(a, 0, c, 0, a.length);
		System.arraycopy(b, 0, c, a.length, b.length);
		return c;
	}
	// From internet: http://stackoverflow.com/questions/21341027/find-indexof-a-byte-array-within-another-byte-array
	 public static int kpmIndexOf( byte[] data, int start, int stop, byte[] pattern) {
	        if( data == null || pattern == null) return -1;

	        int[] failure = computeFailure(pattern);

	        int j = 0;

	        for( int i = start; i < stop; i++) {
	            while (j > 0 && ( pattern[j] != '*' && pattern[j] != data[i])) {
	                j = failure[j - 1];
	            }
	            if (pattern[j] == '*' || pattern[j] == data[i]) {
	                j++;
	            }
	            if (j == pattern.length) {
	                return i - pattern.length + 1;
	            }
	        }
	        return -1;
	    }
	 
	    private static int[] computeFailure(byte[] pattern) {
	        int[] failure = new int[pattern.length];

	        int j = 0;
	        for (int i = 1; i < pattern.length; i++) {
	            while (j>0 && pattern[j] != pattern[i]) {
	                j = failure[j - 1];
	            }
	            if (pattern[j] == pattern[i]) {
	                j++;
	            }
	            failure[i] = j;
	        }

	        return failure;
	    }
}
