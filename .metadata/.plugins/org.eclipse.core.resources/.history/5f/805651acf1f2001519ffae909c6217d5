package channels;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.InetAddress;
import java.net.MulticastSocket;



public class Channel {
	Thread thread;
	MulticastSocket socket;
    InetAddress address;
	private int port;
	
	Channel(String address, String port) throws IOException {
		this.address = InetAddress.getByName(address);
		this.port = Integer.parseInt(port);
		this.socket = new MulticastSocket(this.port);
		this.socket.setTimeToLive(1);
	}
	
	public void listen() {
		this.thread.start();
	}
	
	public String rcvMultiCastData() throws IOException {
        byte[] rbuf = new byte[utilities.Constants.CHUNK_SIZE];
		DatagramPacket packet = new DatagramPacket(rbuf, rbuf.length);
		socket.receive(packet);
		String received = new String(packet.getData(), 0, packet.getLength() - 1);
		System.out.println("Receiving with size: " + packet.getLength());
        return received;
	}

	
	public MulticastSocket getSocket() {
		return socket;
	}

	public InetAddress getAddress() {
		return address;
	}
	
	
}
